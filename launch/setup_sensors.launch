<launch>
    <arg name="launch_prefix" default="" /> <!-- set to value="gdbserver localhost:10000" for remote debugging -->    
    <arg name="node_namespace" default="apriltag_ros_continuous_node" />
    <arg name="detection_id" default="" />
    <arg name="publish_tf" default="false"/>
    <arg name="params_package_name" default="apriltag_ros"/>

    <!-- These nodes republish pi images to be raw -->
    <node name="republish_right" pkg="image_transport" type="republish" output="screen" args="compressed raw">
        <remap from="in" to="/panda_1_gelslim_right/image"/>
        <remap from="out" to="/panda_1_gelslim_right/image_raw"/>
    </node>

    <node name="republish_left" pkg="image_transport" type="republish" output="screen" args="compressed raw">
        <remap from="in" to="/panda_1_gelslim_left/image"/>
        <remap from="out" to="/panda_1_gelslim_left/image_raw"/>
    </node>

    <!-- This node undistorts the images from the cameras -->
    <node name="undistort_cameras" pkg="bimanual" type="undistort_camera.py" output="screen"/>


    <!-- This node detects apriltags in the images -->
    <rosparam command="load" file="$(eval find(arg('params_package_name')) + '/config/settings.yaml')" ns="$(arg node_namespace)" />
    <rosparam command="load" file="$(eval find('bimanual') + '/config/tags.yaml')" ns="$(arg node_namespace)" />


    <include file="$(eval find(arg('params_package_name')) + '/launch/continuous_detection.launch')">
        <arg name="node_namespace" value="apriltag_left"/>
        <arg name="camera_name" value="/panda_1_gelslim_left"/>
        <arg name="camera_frame" value="gelslim_left"/>
        <arg name="image_topic" value="image_undistorted"/>
    </include>
    <include file="$(eval find(arg('params_package_name')) + '/launch/continuous_detection.launch')">
        <arg name="node_namespace" value="apriltag_right"/>
        <arg name="camera_name" value="/panda_1_gelslim_right"/>
        <arg name="camera_frame" value="gelslim_right"/>
        <arg name="image_topic" value="image_undistorted"/>
    </include>

    <include file="$(eval find('netft_rdt_driver') + '/launch/netft.launch')">
        <arg name="ip" value="192.168.1.31"/>
        <arg name="sensor_name" value="netft_thanos"/>
    </include>
    <include file="$(eval find('netft_rdt_driver') + '/launch/netft.launch')">
        <arg name="ip" value="192.168.1.33"/>
        <arg name="sensor_name" value="netft_medusa"/>
    </include>

    <node name="object_tracker" pkg="bimanual" type="color_camera_node.py" output="screen"/>

</launch>